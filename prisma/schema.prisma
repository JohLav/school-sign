// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  SCHOOL
  STUDENT
  TEACHER
}

model School {
  id      Int    @id @default(autoincrement())
  name    String
  address String
  zipcode String
  city    String

  users   User[]
  classes Classsection[]
}

model User {
  id        Int     @id @default(autoincrement())
  firstname String? @db.VarChar(255)
  lastname  String? @db.VarChar(255)
  email     String  @unique @db.VarChar(255)
  password  String  @db.VarChar(255)

  school   School @relation(fields: [schoolId], references: [id])
  schoolId Int

  class   Classsection? @relation(fields: [classId], references: [id])
  classId Int?

  role  Role?
  signs Sign[]
}

model Classsection {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(100)

  school   School @relation(fields: [schoolId], references: [id])
  schoolId Int

  users User[]
  lessons Lesson[]
}

model Sign {
  id         Int      @id @default(autoincrement())
  hashedSign String   @db.VarChar(255)
  date       DateTime
  userId     Int
    lessonId   Int?
  // docId      Int

  user User @relation(fields: [userId], references: [id])
  lesson Lesson?   @relation(fields: [lessonId], references: [id])
  // documents   Document @relation(fields: [docId], references: [id])
}

model Lesson {
  id        Int      @id @default(autoincrement())
  name String @db.VarChar(100)
  dateStart   DateTime
  dateEnd     DateTime
  class   Classsection? @relation(fields: [classId], references: [id])
  classId Int?
  
  signs     Sign[]
 }

// model ClassSchool {
//   id        Int      @id @default(autoincrement())
//   classId   Int
//   schoolId  Int

//   class     Class    @relation(fields: [classId], references: [id])
//   school    School   @relation(fields: [schoolId], references: [id])

//   @@index([classId])
//   @@index([schoolId])
// }

// model School {
//   id          Int          @id @default(autoincrement())
//   name        String       @db.VarChar(100)
//   address     String?      @db.VarChar(255)
//   zipcode     String       @db.VarChar(5)
//   city        String       @db.VarChar(255)
//   typeId      Int?

//   type        Type?         @relation(fields: [typeId], references: [id])
//   classSchools ClassSchool[]

//   @@index([typeId])
// }

// model Type {
//   id      Int      @id @default(autoincrement())
//   name    String   @db.VarChar(100)
//   schools School[]
// }

// model Document {
//   id         Int        @id @default(autoincrement())
//   name       String     @db.VarChar(100)
//   url        String     @db.VarChar(100)
//   categoryId Int

//   category   Category   @relation(fields: [categoryId], references: [id])
//   signs      Sign[]

//   @@index([categoryId])
// }

// model Category {
//   id        Int        @id @default(autoincrement())
//   name      String     @db.VarChar(100)
//   card Document[]
// }

// model Lesson {
//   id        Int      @id @default(autoincrement())
//   date      DateTime
//   userId    Int
//   subjectId Int

//   user      User     @relation(fields: [userId], references: [id])
//   subject   Subject  @relation(fields: [subjectId], references: [id])

//   @@index([userId])
//   @@index([subjectId])
// }

// model Subject {
//   id       Int      @id @default(autoincrement())
//   name     String   @db.VarChar(100)
//   lessons  Lesson[]
// }
